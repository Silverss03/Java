/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.IOFile;
import java.io.File;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.BanDoc;
import model.QLMuon;
import model.Sach;

/**
 *
 * @author Admin
 */
public class FormQLMuon extends javax.swing.JPanel {


    DefaultTableModel tm ;
    private String fqlmuon ;
    private List<QLMuon> lQLMuon;
    private String fsach  ;
    private List<Sach> lsach ;
    public FormQLMuon() {
        initComponents();
        setSize(900,850) ;
        String[] cols = {"Mã bạn đọc", "Tên bạn đọc", "Mã sách", "Tên sách", "Số Lượng", "Tình trạng mượn"} ;
        tm = new DefaultTableModel(cols, 0) ;
        jTable1.setModel(tm);
        fqlmuon = "qlmuon.txt" ;
        fsach = "sach.txt" ;
        loadData() ;
        loadMa() ;
    }

    private void loadData(){
        File f = new File(fqlmuon) ;
        if(f.exists()){
            lQLMuon = IOFile.doc(fqlmuon) ;
        }
        else{
            lQLMuon = new ArrayList<>() ;
        }
        File fs = new File(fsach) ;
        if(fs.exists()){
            lsach = IOFile.doc(fsach) ;
        }
        else{
            lsach = new ArrayList<>() ;
        }
    }
    
    private void loadMa(){
        ComboMabd.removeAllItems();
        ComboMaS.removeAllItems();
        String fbandoc = "bandoc.txt" ;
        List<BanDoc> l1 = IOFile.doc(fbandoc) ;
        if(l1 != null){
            for(BanDoc x : l1){
                ComboMabd.addItem(x.getMa() + "");
            }
        }
        for(Sach x : lsach){
            ComboMaS.addItem(x.getMa() + "") ;
        }
    }
    private boolean maDaCo(int mabd, int mas){
        for(QLMuon x : lQLMuon){
            if(x.getBandoc().getMa() == mabd && x.getSach().getMa() == mas){
                return true ;
            }
        }
        return false ;
    }
    
    private int demDauSach(int mabd){
        int cnt = 0 ; 
        for(QLMuon x : lQLMuon){
            if(x.getBandoc().getMa() == mabd){
                cnt++ ;
            }
        }
        return cnt ; 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        ComboSX = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ComboMabd = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        ComboMaS = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Thêm mới");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Hiển thị");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Lưu vào file");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        ComboSX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Lựa chọn sắp xếp--", "Họ tên bạn đọc", "Số lượng sách mượn", " " }));
        ComboSX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboSXItemStateChanged(evt);
            }
        });
        ComboSX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboSXActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(50, 50, 50)
                .addComponent(jButton4)
                .addGap(49, 49, 49)
                .addComponent(jButton5)
                .addGap(66, 66, 66)
                .addComponent(ComboSX, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(ComboSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jLabel1.setText("Mã bạn đọc");

        ComboMabd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboMabd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboMabdActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã sách");

        ComboMaS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboMaS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboMaSActionPerformed(evt);
            }
        });

        jLabel3.setText("Số lượng mượn");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Tình trạng mượn");

        jButton1.setText("Làm mới");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ComboMaS, 0, 89, Short.MAX_VALUE)
                            .addComponent(ComboMabd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(52, 52, 52)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ComboMabd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(ComboMaS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        File f = new File(fqlmuon) ;
        if(f.exists()){
            lQLMuon = IOFile.doc(fqlmuon) ;
            tm.setRowCount(0);
            for(QLMuon i : lQLMuon){
                tm.addRow(i.toObject());
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private Sach getSachByMa(int ma){
        for(Sach x : lsach){
            if(x.getMa() == ma)
                return x ;
        }
        return null ;
    }
    
    private BanDoc getBanDocByMa(int ma){
        String fbandoc = "bandoc.txt" ;
        List<BanDoc> l1 = IOFile.doc(fbandoc) ;
        if(l1 != null){
            for(BanDoc x : l1){
                if(x.getMa() == ma) 
                    return x ;
            }
        }
        return null ;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int mabd = Integer.valueOf(ComboMabd.getSelectedItem().toString()) ;
        int masach = Integer.valueOf(ComboMaS.getSelectedItem().toString()) ;
        if(maDaCo(mabd, masach)){
            JOptionPane.showMessageDialog(this, "Trùng 2 mã!");
            ComboMabd.requestFocus();
            return ;
        }
        int sl = 0 ; 
        int sltv = getSachByMa(masach).getSoluong();
        try{
            sl = Integer.valueOf(jTextField1.getText()) ;
            if(sl > sltv){
                JOptionPane.showMessageDialog(this, "Số lượng mượn ko được vượt quá số sách thư viện đang có!");
                jTextField1.requestFocus();
                return ;
            }
            String tt = jTextField2.getText() ;
            QLMuon ql = new QLMuon( getBanDocByMa(mabd),getSachByMa(masach),  sl, tt) ;
            tm.addRow(ql.toObject());
            lQLMuon.add(ql) ;
            getSachByMa(masach).setSoluong(sltv - sl);
            IOFile.ghi(fsach, lsach) ;
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Chỉ nhập số vào ô số lượng!");
            jTextField1.requestFocus();
            return ;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        loadMa() ;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ComboMabdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboMabdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboMabdActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        IOFile.ghi(fqlmuon, lQLMuon);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void ComboMaSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboMaSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboMaSActionPerformed

    private void ComboSXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboSXItemStateChanged
        // TODO add your handling code here:
        if(ComboSX.getSelectedIndex() == 1){
           lQLMuon.sort(new Comparator<QLMuon>(){
               @Override
               public int compare(QLMuon o1, QLMuon o2) {
                    String[] arr1 = o1.getBandoc().getHoten().split("\\s+") ;
                    String[] arr2 = o2.getBandoc().getHoten().split("\\s+") ;
                    if(arr1[arr1.length - 1].equalsIgnoreCase(arr2[arr2.length - 1])){
                        return o1.getBandoc().getHoten().compareTo(o2.getBandoc().getHoten()) ;
                    }
                    else{
                        return arr1[arr1.length - 1].compareTo(arr2[arr2.length - 1]) ;
                    }
               }
           });
        }
        if(ComboSX.getSelectedIndex() == 2){
            lQLMuon.sort(new Comparator<QLMuon>(){
                @Override
                public int compare(QLMuon o1, QLMuon o2) {
                    return Integer.valueOf(o1.getSluong()).compareTo(Integer.valueOf(o2.getSluong())) ;
                }
                
            });
        }
        tm.setRowCount(0);
        for(QLMuon x : lQLMuon){
            tm.addRow(x.toObject());
        }
    }//GEN-LAST:event_ComboSXItemStateChanged

    private void ComboSXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboSXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboSXActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboMaS;
    private javax.swing.JComboBox<String> ComboMabd;
    private javax.swing.JComboBox<String> ComboSX;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
